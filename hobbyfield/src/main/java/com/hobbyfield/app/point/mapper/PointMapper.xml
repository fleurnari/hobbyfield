<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hobbyfield.app.point.mapper.PointMapper">

	<!-- 포인트 상품 전체조회 -->
	<select id="selectPointAllList" resultType="PointVO">
		SELECT *
		<!-- point_id, -->
		<!-- point_name, -->
		<!-- point_item_type, -->
		<!-- point_state, -->
		<!-- point_view, -->
		<!-- point_regdate, -->
		<!-- point_endterm, -->
		<!-- point_img_name, -->
		<!-- point_img_path -->
		FROM POINT
		ORDER BY
		point_id DESC
	</select>

	<!-- 포인트 상품 단건조회 -->
	<select id="selectPointInfo" resultType="PointVO">
		SELECT
		point_id,
		point_name,
		point_content,
		point_item_type,
		point_state,
		point_view,
		point_regdate,
		point_endterm,
		point_img_name,
		point_img_path
		FROM point
		WHERE point_id = #{pointId}
	</select>
	<!-- po.point_opt_id, -->
	<!-- po.point_period, -->
	<!-- po.point_price, -->

	<!-- e.emoji_id, -->
	<!-- e.emoji_img_name, -->
	<!-- e.emoji_img_path -->
	<!-- FROM point p -->
	<!-- FULL OUTER JOIN -->
	<!-- point_option po ON p.point_id = po.point_id -->
	<!-- FULL OUTER JOIN emoji e ON po.point_id -->
	<!-- = e.point_id -->
	<!-- WHERE p.point_id = #{pointId} -->


	<!-- 포인트 상품 등록 -->
	<insert id="insertPoint" parameterType="PointVO">
		<selectKey keyProperty="pointId" resultType="int"
			order="BEFORE">
			SELECT NVL(MAX(point_id), 0) + 1
			FROM point
		</selectKey>
		INSERT INTO point(
		point_id,
		point_name,
		point_content,
		point_item_type,
		point_state,
		point_regdate,
		point_endterm,
		point_img_name,
		point_img_path,
		point_view
		) VALUES (
		#{pointId},
		#{pointName},
		#{pointContent},
		#{pointItemType},
		#{pointState},
		<choose>
			<when test="pointRegdate != null">
				#{pointRegdate}
			</when>
			<otherwise>
				<![CDATA[SYSDATE]]>
			</otherwise>
		</choose>
		,
		#{pointEndterm},
		#{pointImgName},
		#{pointImgPath},
		#{pointView}
		)
	</insert>


	<!-- 포인트 상품 수정 -->
	<update id="updatePoint" parameterType="PointVO">
		UPDATE point
		<set>
			<if test="pointName != null and !pointName.equals('')">
				point_name = #{pointName},
			</if>
			<if test="pointContent != null and !pointContent.equals('')">
				point_content = #{pointContent},
			</if>
			<if test="pointRegdate != null and !pointRegdate.equals('')">
				point_regdate = TO_CHAR(SYSDATE, 'YYYY/MM/DD'),
			</if>
			<if test="pointEndterm != null and pointEndterm.equals('')">
				point_endterm = TO_CHAR(SYSDATE, 'YYYY/MM/DD'),
			</if>
			<if test="pointImgName != null and !pointImgName.equals('')">
				point_img_name = #{pointImgName},
			</if>
			<if test="pointImgPath != null and !pointImgPath.equals('')">
				point_img_path = #{pointImgPath}
			</if>
		</set>
		WHERE point_id = #{pointId}
	</update>


	<!-- 포인트 상품 삭제 -->
	<delete id="deletePointInfo" parameterType="int">
		DELETE FROM point
		WHERE point_id = #{pointId}
	</delete>

	<!-- 조회수 업데이트 -->
	<update id="pointViewCount" parameterType="PointVO">
		UPDATE point
		SET
		point_view = point_view + 1
		WHERE point_id = #{pointId}
	</update>


</mapper>
